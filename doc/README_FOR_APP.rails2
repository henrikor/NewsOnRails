Uppdateringer:
--------------
ALTER TABLE images ADD bane varchar(32);

Konverter til utf-8:
--------------------
ALTER TABLE articles CONVERT TO character set utf8;

Installation
------------

UltraSphinx:
  # apt-get install libmysqlclient15-dev
  # gem install chronic
  http://www.sphinxsearch.com/downloads.html
  # ./configure
  # make
  # make install
  # mkdir config/ultrasphinx
  # cp vendor/plugins/ultrasphinx/examples/default.base config/ultrasphinx/
  # gem install ultrasphinx

NB! dersom flere applikasjoner kjører ultrasphinx må config/ultrasphinx/default.base redigeres og:
path = "" må settes til forskjellig for hver app + at port må settes forkjellig TO - 2 - steder!

  # rake ultrasphinx:configure
  # rake ultrasphinx:index
  # rake ultrasphinx:daemon:start

I produksjon:

  # RAILS_ENV=production rake ultrasphinx:configure
  # RAILS_ENV=production rake ultrasphinx:index
  # RAILS_ENV=production rake ultrasphinx:daemon:start

Cronjobb:

    # /etc/cron.d/nor
    # Produksjon:
    */6 * * * * root bash -c 'cd /var/www/sites/henrik/tjen-folket.no/subdomains/www/trunk/; RAILS_ENV=production rake ultrasphinx:index:delta >> /var/log/ultrasphinx-index.log 2>&1'
    1 4 * * * root bash -c 'cd /var/www/sites/henrik/tjen-folket.no/subdomains/www/trunk/; RAILS_ENV=production rake ultrasphinx:index:main >> /var/log/ultrasphinx-index.log 2>&1'
    */3 * * * * root bash -c 'cd /var/www/sites/henrik/tjen-folket.no/subdomains/www/trunk; RAILS_ENV=production rake ultrasphinx:daemon:start >> /var/log/ultrasphinx-daemon.log 2>&1'

    */6 * * * * root bash -c 'cd /var/www/sites/henrik/kommunisme.no/subdomains/www/trunk/; RAILS_ENV=production rake ultrasphinx:index:delta >> /var/log/ultrasphinx-index.log 2>&1'
    1 4 * * * root bash -c 'cd /var/www/sites/henrik/kommunisme.no/subdomains/www/trunk/; RAILS_ENV=production rake ultrasphinx:index:main >> /var/log/ultrasphinx-index.log 2>&1'
    */3 * * * * root bash -c 'cd /var/www/sites/henrik/kommunisme.no/subdomains/www/trunk/; RAILS_ENV=production rake ultrasphinx:daemon:start >> /var/log/ultrasphinx-daemon.log 2>&1'

    # Development:
    */6 * * * * root bash -c 'cd /var/www/sites/henrik/tjen-folket.no/subdomains/test/trunk/; rake ultrasphinx:index:delta >> /var/log/ultrasphinx-index.log 2>&1'
    1 4 * * * root bash -c 'cd /var/www/sites/henrik/tjen-folket.no/subdomains/test/trunk/; rake ultrasphinx:index:main >> /var/log/ultrasphinx-index.log 2>&1'
    */3 * * * * root bash -c 'cd /var/www/sites/henrik/tjen-folket.no/subdomains/test/trunk/; rake ultrasphinx:daemon:start >> /var/log/ultrasphinx-daemon.log 2>&1'

    */6 * * * * root bash -c 'cd /var/www/sites/sos/sos-rasisme.no/subdomains/nortest/trunk/; rake ultrasphinx:index:delta >> /var/log/ultrasphinx-index.log 2>&1'
    1 4 * * * root bash -c 'cd /var/www/sites/sos/sos-rasisme.no/subdomains/nortest/trunk/; rake ultrasphinx:index:main >> /var/log/ultrasphinx-index.log 2>&1'
    */3 * * * * root bash -c 'cd /var/www/sites/sos/sos-rasisme.no/subdomains/nortest/trunk; rake ultrasphinx:daemon:start >> /var/log/ultrasphinx-daemon.log 2>&1'

Will Paginate
   # gem sources -a http://gems.github.com
   # gem install mislav-will_paginate

T-mail:
   # gem install tmail

We require ImageMagic. Debian/ Ubuntu, simply:
  # apt-get install imagemagick
  # apt-get install libgraphicsmagick1-dev
evt:
 # gem install rmagick

Then Rmagic
  # apt-get install librmagick-ruby

We also require some clothing:
  # gem i BlueCloth
  # gem i RedCloth
  # gem i mediacloth

TeX2img:
  # apt-get install texlive-latex-base
  # apt-get install texlive-fonts-recommended
  # apt-get install gs
  # apt-get install pdfjam

And irb:
  # apt-get install irb1.8

Kalender:
  # script/plugin install git://github.com/timcharper/calendar_date_select.git

Haml:
  # gem install haml
  # haml --rails . (i rails root)

Mysql:
  # apt-get install libmysql-ruby1.8
  # gem install mysql

Install the mysql db:
  # mysql -p < db/db.sql

Logg inn to mysql as root and run:
  > GRANT ALL PRIVILEGES ON newsonrails_development.* TO 'nor'@'localhost' IDENTIFIED BY 'siebqr374';
  

GRANT index, select PRIVILEGES ON sosrasis_sosrasisme.* TO 'sosrasis_web'@'localhost' IDENTIFIED BY 'J0nas2uNgel';


We need to make an unix link to the public folder for the app that serves the fast public pages
who don't login opportunities.
  # ln -s [path to public folder] [root of app]


shell> mysqladmin create newsonrails_production
shell> mysqladmin create newsonrails_test
shell> mysqldump --opt newsonrails_development | mysql newsonrails_production
shell> mysqldump --opt newsonrails_development | mysql newsonrails_test

#checkedgroup {background: green}
#sentralgroup {background: red}
#oftenusedgroup {background: yellow}
SET PASSWORD FOR 'bob'@'%.loc.gov' = PASSWORD('newpass'); 


Apache installasjonstips:
-------------------------
- Filrettigheter på debian:
  # chown -R nobody.nogroups *
- Sjekk logger:
  - # log/production.log
  - # /var/log/apache2/error.log


TODO:
-----


Modifications of engines etc (outdated?)
----------------------------------------

- Have own version of role.rb modell (from UserEngine) (think this note is outdated)
- Change/ add external svn's:
  Use: 
    $ svn propedit svn:externals vendor/plugins


----------------------------------
apache2 on gplhosts.com (with dtc)
----------------------------------
Description at:
http://dtcsupport.gplhost.com/pmwiki.php?n=PmWiki.RubyOnRails


----
Emacs
-----
We should also use emacs22 with railsmode. To build with gtk support on debian/ubuntu:

  apt-get build-dep emacs21
  cvs -z3 -d:pserver:anonymous@cvs.savannah.gnu.org:/sources/emacs co emacs
  ./configure
  make bootstrap
  make install

My .emacs is in this directory.
 
Then: http://wiki.rubyonrails.com/rails/pages/HowToUseEmacsWithRails



---------
ISSUES
---------
----
Use this README file to introduce your application and point to useful places in the API for learning more.
Run "rake appdoc" to generate API documentation for your models and controllers.

Oppdateringer, ny innloggingsgreie:
-----------------------------------
INSERT INTO newsonrails_production.roles (id, name, description) SELECT id, name, description FROM tmpdb.roles;
alter table norusers add firstname varchar(40), lastname varchar(40);
INSERT INTO norusers (id, login, email, firstname, lastname, created_at, updated_at, salted_password, salt) SELECT id, login, email, firstname, lastname, created_at, updated_at, crypted_password, salt FROM users;

# Nytt:
norusers
norusers_roles

alter table roles add column authorizable_type varchar (30);
alter table roles add column authorizable_id int (11);
alter table roles add column created_at datetime;
alter table roles add column updated_at datetime;


-------------------
MARKITUP!

* Legg til i routes (nederst):
  map.resources :articles, :member => {:parse_textile => :post}

* Pass på at javascript mappa i public har markup + Jquery (http://www.jquery.com/).
    Sjekk at det er rett versjon er linka opp i application.html.erb

* jQuery har konflikt med prototype.js. For å løse dette:
At the bottom of the jQuery file add:

/* Set jQuery to run in no-conflict mode */
var J = jQuery.noConflict();


Then if you initialize your MarkItUp! editor like this:


  def markitup_editor_initialize
    "<script type=\"text/javascript\" >
      $(document).ready(function() {
        $(\".markItUpTA\").markItUp(mySettings);
      });
    </script>"
  end


Just convert the ’$’ to ‘J’, or whatever you named your no conflict mode jQuery in the first step:


  def markitup_editor_initialize
    "<script type=\"text/javascript\" >
      J(document).ready(function() {
        J(\".markItUpTA\").markItUp(mySettings);
      });
    </script>"
  end
